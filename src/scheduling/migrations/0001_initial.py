# Generated by Django 5.1.1 on 2025-10-15 16:06

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tenants', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Professional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(max_length=120, verbose_name='Nome de exibicao')),
                ('bio', models.TextField(blank=True, verbose_name='Bio')),
                ('color', models.CharField(default='#2563EB', max_length=7, verbose_name='Cor na agenda')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='professionals', to='tenants.tenant')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='professional_profile', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Profissional',
                'verbose_name_plural': 'Profissionais',
                'ordering': ('display_name',),
            },
        ),
        migrations.CreateModel(
            name='AvailabilityRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekday', models.IntegerField(choices=[(0, 'Segunda'), (1, 'Terca'), (2, 'Quarta'), (3, 'Quinta'), (4, 'Sexta'), (5, 'Sabado'), (6, 'Domingo')], verbose_name='Dia da semana')),
                ('start_time', models.TimeField(verbose_name='Inicio')),
                ('end_time', models.TimeField(verbose_name='Fim')),
                ('break_start', models.TimeField(blank=True, null=True, verbose_name='Intervalo inicio')),
                ('break_end', models.TimeField(blank=True, null=True, verbose_name='Intervalo fim')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability_rules', to='tenants.tenant')),
                ('professional', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='availability_rules', to='scheduling.professional')),
            ],
            options={
                'verbose_name': 'Disponibilidade',
                'verbose_name_plural': 'Disponibilidades',
                'ordering': ('weekday', 'start_time'),
            },
        ),
        migrations.CreateModel(
            name='ProfessionalService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration_minutes', models.PositiveIntegerField(blank=True, null=True, verbose_name='Duracao customizada (min)')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Preco customizado')),
                ('professional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_links', to='scheduling.professional')),
            ],
            options={
                'verbose_name': 'Servico por profissional',
                'verbose_name_plural': 'Servicos por profissional',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, verbose_name='Servico')),
                ('description', models.TextField(blank=True, verbose_name='Descricao')),
                ('duration_minutes', models.PositiveIntegerField(default=30, verbose_name='Duracao (min)')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Preco')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('professionals', models.ManyToManyField(blank=True, related_name='services', through='scheduling.ProfessionalService', to='scheduling.professional', verbose_name='Profissionais')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Servico',
                'verbose_name_plural': 'Servicos',
                'ordering': ('name',),
            },
        ),
        migrations.AddField(
            model_name='professionalservice',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='professional_links', to='scheduling.service'),
        ),
        migrations.CreateModel(
            name='TimeOff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, verbose_name='Motivo')),
                ('start', models.DateTimeField(verbose_name='Inicio')),
                ('end', models.DateTimeField(verbose_name='Fim')),
                ('professional', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='time_offs', to='scheduling.professional')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_offs', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Folga/Indisponibilidade',
                'verbose_name_plural': 'Folgas/Indisponibilidades',
                'ordering': ('-start',),
            },
        ),
        migrations.AlterUniqueTogether(
            name='professionalservice',
            unique_together={('professional', 'service')},
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=150, verbose_name='Cliente')),
                ('customer_phone', models.CharField(max_length=32, verbose_name='Telefone')),
                ('customer_email', models.EmailField(blank=True, max_length=254, verbose_name='E-mail')),
                ('scheduled_for', models.DateTimeField(verbose_name='Agendado para')),
                ('duration_minutes', models.PositiveIntegerField(default=30, verbose_name='Duracao (min)')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Preco')),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('confirmed', 'Confirmado'), ('cancelled', 'Cancelado'), ('no_show', 'Nao compareceu'), ('completed', 'Concluido')], default='pending', max_length=20, verbose_name='Status')),
                ('notes', models.TextField(blank=True, verbose_name='Observacoes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_bookings', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='tenants.tenant')),
                ('professional', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bookings', to='scheduling.professional')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bookings', to='scheduling.service')),
            ],
            options={
                'verbose_name': 'Agendamento',
                'verbose_name_plural': 'Agendamentos',
                'ordering': ('-scheduled_for',),
                'indexes': [models.Index(fields=['tenant', 'scheduled_for'], name='scheduling__tenant__e470ca_idx'), models.Index(fields=['tenant', 'professional', 'scheduled_for'], name='scheduling__tenant__fdfd56_idx')],
            },
        ),
    ]
